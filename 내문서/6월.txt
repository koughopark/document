bit.ly/lbt-pds
bit.ly/lbt-oracle


@D:\oraclexe\app\oracle\product\11.2.0\server\rdbms\admin\scott.sql

skyun.nam@gmail.com

========================================================================================================================


구글드라이브: goo.gl/noxoWS

수집>적재>처리(탐색)>분석(응용) 가치찾기

github: https://github.com/bitacademy-bigdata

gmail : kickscar@gmail.com

office

pycharm

D:\
 |---javastudy
 |    |----- eclipse-workspace
 |---PycharmProjects
 |---python
 |---bigdata


SCM 소스코드메니지먼트
===========================
설치시 시리얼 물어오면 아래와같이 57006711-아무숫자 7개00~99까지 99,98,97.......끝 두자리 숫자를 이런식으로 변경해 보면서
해보면 시리얼이 먹히는게 있습니다
설치 완료후 정보를 보면 시리얼이 보입니다
단 3라이센스 인증 인스톨량이므로 새어 나가지 않도록 공개하지 말아야 합니다
(다른 3사람이 사용하면 인증 통과가 않되니 주의 하십시요)
아래있는 시리얼은 사용 불가이니 사용 하지 말고 반드시 꼭 직접 시리얼을 찾아서 자기것으로만 항상 설치 하십시요

57006711-xxxxxxx00 ~ 57006711-xxxxxxx99
   x = 원하는 숫자

시리얼 끝의 00부터 99까지 넣어 보면 한 개 먹는게(인증 가능) 있습니다.



시리얼의 예:  57006711-232322288
57006711-134679666

================

git config --global user.email "illuillu55@hotmail.com"
git config --global user.name "james"

analysis_fb

pycharm

깃허브 다운로드
https://git-scm.com/downloads

https://developers.facebook.com/tools/debug/accesstoken/

https://developers.facebook.com
-로그인후 우측 상단 내앱 클릭 - 페이스북에서 정보 수집

analysis_fb
analysis_pd
analysis_bchiken

===================

D:\PycharmProjects 물리적 환경
C:\Users\BIT-USER\venv  가상 환경

Github 등록 방법

[이클립스]
Git Hub 에서 Repositories 에서 NEW 로 프로젝트 생성 -> 생성된 프로젝트 주소 복사 ->

프로젝트 에서 우클릭 -> Team -> Share Project
-> Use or cre... 체크 Project 체크 -> Create Repository 클릭 -> finish
-> Windows -> Show View -> Others -> Git -> Git Repositories
-> Git Repositories 탐색창에서 해당 프로젝트에서 우클릭 -> Commit 클릭 -> Unstaged Changes 에서 Commit 할 파일 선택하여 Staged Changes 로 드래그 -> Commit Message 에서 내용 입력 필수 -> Commit and Push 클릭 -> Push Branch master 창에 자동으로 정보 입력됨 -> next next finish


[파이참]
Github 프로그램 다운,설치 -> 메뉴에서 VCS -> Import into Version Control -> Share Project on GitHub
-> Share Project On GitHub 창에서 Share 버튼 클릭 -> OK -> OK
(변경사항 추가)
프로젝트 소스 변경후 -> VCS -> Commit -> Commit Message 입력 -> 아래 Commit오른쪽 역삼각형 Commit and Push 클릭 -> Push 클릭

===========================

https://www.data.go.kr/
testestzxcv
testest1!


========================================================================================================================

수집 ,(적재)
분석
시각화
(R, Python// R은 수집에 약함 분석용)

Elastic Search
Lucene

구글 크롤러가 웹사이트를 찔러보고 응답오는 사이트를 저장한다.

MFC 흉내내면서 배움

[명령어]
GET
POST
DELETE
PUT

헤드에는 프로토콜이 정의한 정보가 들어있다.

IP-TCP-DATA 순으로 네트워크 진행
헤드에 PORT번호도 같이 들어있다.
PORT는 프로세스를 구분한다. (포트를 열고있는 프로세스에 연결)

TCP -> HTTP 응용프로토콜이 올라가 있다.

[주요프로토콜]
HTTP	인터넷
FTP	파일
SMTP	메일

웹에서 응답하는것은 JSON만 있는것은 아니다.

페이스북에서 JSON(JavaScript Object Notation)으로 데이터를 전달한다.

안드로이드에서는 JSON을 GSON으로 바꾼다
자바에서는 JSON을 ArrayList로 바꾼다

http://kickscar.cafe24.com:8080/myapp-api/api/user/list

[동기통신]
응답이 올때까지 기다리다가 응답이 오면 반응하는 통신 (응답을 주고 받는 통신)

[비동기통신]
응답이 없어도 데이터를 보낸다.

- 응답을 기다리는 프로세스가 많으면 어떤 응답이 먼저 올지 모르기 때문에 [[콜백]] 을 달아놓는다.

- 람다는 익명함수(어노니머스 클래스), 한번만 사용할때 주로 사용

(as 아리아스)



========================================================================================================================

1. analysis_fb -> 수집 -> 적재(파일) -> 분석 -> 시각화
2. analysis_pd -> 수집 -> 적재(파일) -> 분석 -> 시각화
3. analysis_chiken -> 수집 -> 적재(파일) -> 분석 -> 시각화
- 시각화 방법은 다름

파이썬 설치 경로(원본인터프리터):
-원본: 		C:\Users\BIT-USER\AppData\Local\Programs\Python\Python36
-바로가기:	 C:\Users\BIT-USER\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Python 3.6
파이참 설치 경로: C:\Program Files\JetBrains
파이참 프로젝트 경로: D:\PycharmProjects
가상환경 경로: D:\PycharmProjects\venv

for in 뒤에는 리스트,튜플, 레인지 같은 값들이 있어야 한다.

yield 리턴대신 끝까지 함수값 전달할때 사용



http://openapi.tour.go.kr/openapi/service/TourismResourceStatsService/getPchrgTrrsrtVisitorList?YM=201701&SIDO=%EC%84%9C%EC%9A%B8%ED%8A%B9%EB%B3%84%EC%8B%9C&GUNGU=&RES_NM=&numOfRows=10&_type=json&pageNo=1
- (%EC%84%9C) 3개가 글자 한개
http://openapi.tour.go.kr/openapi/service/TourismResourceStatsService/getPchrgTrrsrtVisitorList?YM=201701&SIDO=%EC%84%9C%EC%9A%B8%ED%8A%B9%EB%B3%84%EC%8B%9C&GUNGU=&RES_NM=&numOfRows=10&_type=json&pageNo=1&serviceKey=6m9Oq%2F9j8cIEp6w%2F3PmNrbAS1P17y24uk3Q2xloOH0WyDrSXbGHGpnF3Pf%2Bob8J6AW2k2HO%2BygzGcjrnyKNgog%3D%3D
- (서비스키 포함)

tdd (테스트 드라이브 디벨로퍼) : 테스트 하면서 개발하는 방식

튜플: 하나의 특성을 집합으로 모음
리스트: 같은 종류의 자료들의 모음

http://openapi.tour.go.kr/openapi/service/TourismResourceStatsService/getPchrgTrrsrtVisitorList?YM=201703&SIDO=%EC%84%9C%EC%9A%B8%ED%8A%B9%EB%B3%84%EC%8B%9C&GUNGU=&RES_NM=&numOfRows=10&_type=json&pageNo=1&serviceKey=6m9Oq%2F9j8cIEp6w%2F3PmNrbAS1P17y24uk3Q2xloOH0WyDrSXbGHGpnF3Pf%2Bob8J6AW2k2HO%2BygzGcjrnyKNgog%3D%3D

========================

6월 15일

C:\Windows\Fonts 에서 해당 ttl 파일 복사 ->
2. pytagcloud 한글처리
    1) python 설치 디렉토리/venv/Lib/site-packages/pytagcloud/fonts
        에 한글 폰트 복사.(malgun.ttf)
    2) python 설치 디렉토리/venv/Lib/site-packages/pytagcloud/fonts/font.json 수정
        (ttf 부분은 정확히 입력)
	{
		"name": "Malgun",
		"ttf": "malgun.ttf",
		"web": "http://fonts.googleapis.com/css?family=Malgun"
	},

3. venv/Lib/site-packages/matplotlib/mpl-data/matplotlibrc 파일에서
#font.family         : sans-serif <- 이부분을 찾아서
font.family         : Malgun Gothic <- 이렇게 변경

========================================================================================================================

6월 18일

inner join 양 테이블에서 일치되는 항목만 나오게 하는거
outer join 한 쪽 테이블이 다 나오게 join 하여 나오게 하는거 (left, right)
full join 양쪽다 나오게 하는거 (outer)

========================================================================================================================

6월 19일

오전 10:28	Packages installed successfully: Installed packages: 'scipy' 설치

tourspot r_중국 r_일본 r_미국
경복궁	0.2	0.4	0.5
경복궁	0.2	0.4	0.5

========================================================================================================================

6월 20일



========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================
========================================================================================================================