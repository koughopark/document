- 주제영역 5의 워크플로는 2018년 09월 스마트카 운전자들이 구매한 "스마트카 차량용품 구매 이력" 과 "스마트카 마스터 데이터"를 결합한 데이터셋을 만들고, 차량번호별 구매한 상품 리스트를 로컬 파일시스템에 생성하는 것이다.
- 스마트카 차량용품 구매 이력 데이터는 SmartCar_Item_BuyList 테이블로 구성돼 있고, 스마트카 마스터 데이터는 앞서 여러번 사용했던 SmartCar_Master_Over18 테이블을 이용할 것이다.
- 워크플로의 하이브 작업에 사용되는 하이브 QL은 /CH06/HiveQL/2nd 의 경로에서 제공


1.주제5 작업 디렉터리로 이동
	휴 -> 메뉴 -> 브라우저 -> 파일 클릭
	/pilot-pjt/workflow/hive_script/subject5



2.주제영역 5에서 사용할 하이브 스크립트파일 3개 생성.
	 /pilot-pjt/workflow/hive_script/subject5 로 이동
	 새로만들기 -> 파일 -> 파일명: create_table_smartcar_item_buylist_info.hql
	 생성된 파일 클릭 -> 좌측 [파일 편집] 클릭
	 아래 코드 입력
	 ===========[내부코드]========================
create table if not exists Managed_SmartCar_Item_BuyList_Info (
 car_number string,
 sex string,
 age string,
 marriage string,
 region string,
 job string,
 car_capacity string,
 car_year string,
 car_model string,
 item string,
 score string
)
partitioned by( biz_month string )
row format delimited
fields terminated by ','
stored as textfile;
==================================================
	저장

	# 같은 위치에 두번째 하이브 스크립트 파일 생성
	새로만들기 -> 파일 -> 파일명: insert_table_managed_smartcar_item_buylist_info.hql
	해당 파일 클릭 -> 편집 -> 아래 코드 입력
===========[내부코드]=========
set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nonstrict;

insert overwrite table Managed_SmartCar_Item_BuyList_Info partition(biz_month)
select
   t1.car_number,
   t1.sex,
   t1.age,
   t1.marriage,
   t1.region,
   t1.job,
   t1.car_capacity,
   t1.car_year,
   t1.car_model,
   t2.item,
   t2.score,
   t2.month as biz_month
 from
  SmartCar_Master_Over18 t1 join SmartCar_Item_Buylist t2
on
  t1.car_number = t2.car_number
where
  t2.month = '201809'


==============================
	저장
	# "차량 물품 구매리스트" 데이터와 "스마트카 마스터" 데이터를 조인한 후 삽입하는 하이브 스크립트.
	# 하이브 QL의 마지막 줄에 "2018년 09월"에 해당하는 물품 구매 데이터를 가져오는것을 확인할수 있다.

	# 같은 위치에 세번째 하이브 스크립트 파일 생성
	새로만들기 -> 파일 -> 파일명: local_save_managed_smartcar_item_buylist_info.hql
	해당 파일 클릭 -> 편집 -> 아래 코드 입력
===========[내부코드]=========
insert overwrite local directory '/home/pilot-pjt/item-buy-list'
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
select car_number, concat_ws("," , collect_set(item))
from managed_smartcar_item_buylist_info
group by car_number
==============================
	저장
	# 차량별로 구매한 상품 리스트를 조회해서 로컬 파일시스템의 특정 위치(/home/pilot-pjt/item-buy-list)에 파일을 생성하는 하이브 스크립트
	# SELECT 구문을 보면 collect_set() 함수를 이용해 차량번호별로 그루핑한 결과를 하나의 상품 리스트 재구성하고 있다.


	휴 -> 상단메뉴 [쿼리] 콤보박스 -> 스케줄러 -> Workflow -> [문서(역삼각형)] 클릭 -> 작업 클릭

	워크플로 작업 툴 박스 에서 "Hive Server2 스크립트" 아이콘 드래그 -> [여기에 작업 두기] 에 드롭
	앞 단계에서 만든 pilot-pjt/workflow/hive_script/subject5 에 있는 create_table_managed_smartcar_item_buylist_info.hql 선택 -> 추가 버튼 클릭

	워크플로 작업 툴 박스 에서 "Hive Server2 스크립트" 아이콘 드래그 -> 첫번째 작업 바로 아래 드롭
	앞 단계에서 만든 pilot-pjt/workflow/hive_script/subject5 에 있는 insert_table_managed_smartcar_item_buylist_info.hql 선택 -> 추가 버튼 클릭

	워크플로 작업 툴 박스 에서 "Hive Server2 스크립트" 아이콘 드래그 -> 두번째 작업 바로 아래 드롭
	앞 단계에서 만든 pilot-pjt/workflow/hive_script/subject5 에 있는 local_save_managed_smartcar_item_buylist_info.hql 선택 -> 추가 버튼 클릭


	# 워크플로 이름 지정
	작업 내역 상단 My Workflow 클릭 -> "Subject 5 - Workflow" 변경 -> 확인 클릭

	# 저장
	상단 저장 아이콘 클릭

	# 작성한 워크플로를 작동하기 위한 Coordinator 를 생성
	[Hue 3 버전]
	상단 메뉴 -> Workflows -> 편집기 -> Coordinator 클릭 -> 생성 클릭
	[Hue 4 버전]
	상단 메뉴 [쿼리] 콤보박스 -> 스케줄러 -> 예약 클릭

	# 제목 입력
	My Schedule 이름 클릭 -> "Subject5 - Coordinator" 으로 변경

	# Coordinator가 사용할 워크플로 선택
	[Workflow 선택...] 클릭 -> 앞에서 만든 워크플로 (Subject 5 - Workflow) 선택

	# Coordinator는 워크플로를 주기적으로 실행하기 위한 일종의 배치 잡 스케줄러다.
	# 스케줄러 값 변경
	다음 마다: "일", 다음에서: "5":"0"
	옵션 클릭
		시간대: "Asia/Seoul"
		원본: "2018-09-05"(수집일), 시계 아이콘:"00:00"
		->  "2018-12-31", 시계 아이콘:"23:59"
	# 위 설정은 2018년 09월 05일부터 2018년 12월 31일 까지, 매일 새벽 05시에 Coordinator와 연결돼 있는 워크플로가 작동한다.
	# "UTC 시간만 해당됩니다..." 라는 메시지는 "Asia/Seoul"의 타임존을 설정했기 때문에 무시해도 된다.

	# 워크플로 즉시 실행하기 => 매개변수 일자를 직접 입력하고 저장 -> 제출 클릭

	저장
	제출

	# 제출된 Coordinator 상태 확인
	[Hue 3]
	휴 -> Workflows -> 대시보드 -> Coordinator
	[hue 4]
	휴 -> 상단 Job 클릭 -> 일정 클릭

	# 워크플로가 작동하면 워크플로에서 정의된 잡이 시작되며, 우측 상단 Job 에서 실행 중인 잡의 개수가 표시된다.

	# "Subject 5 - Workflow"가 정상적으로 작동됐는지 확인
	휴 -> Hive Editor -> QL 입력
	# "biz_date=20180905"의 날짜는 각자의 파일럿 환경의 실행 일자에 맞춰 입력
	# 앞서 워크플로를 통해 만들어지는 Managed_SmartCar_Emergency_Check_Info 테이블이 휴의 Hive Editor에 곧바로 표기되지 않아 하이브 QL 실행 에러가 발생하면 좌측의 테이블 리프레시를 누른다.
	======[내부 코드]=========
select * from managed_smartcar_item_buylist_info

where biz_month = '201809'
	==========================
	실행

	# 한번 등록한 Coordinator는 종료 기간까지 계속 활성화된 상태로 남아 있게 되어 파일럿 PC의 리소스를 차지하게 된다.
	# 파일럿 환경에서는 매일 워크플로가 실행될 필요가 없으니 실행 및 테스트가 끝난 잡은 상단의 [Workflows] -> 대시보드 -> Coordinator 메뉴를 선택하고, 실행 중인 잡을 선택해서 모두 종료한다.

	# 차량 번호별로 용품을 구매한 리스트 파일이 Server02의 로컬 파일 시스템에 생성됐는지 확인.
	[server02, SSH]
	more /home/pilot-pjt/item-buy-list/000000_0








