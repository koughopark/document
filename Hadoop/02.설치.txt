준비물: 자바설치, 리눅스 iso 파일, 버추얼 박스 설치

1. 자바 설치 및 패스 설정
	- 변수이름: JAVA_HOME
	- 변수 값: 자바 jdk 설치 경로
	- 시스템 변수 path: (%JAVA_HOME%\bin)

2. 버추얼 박스 가상파일 생성및 기본 환경설정
	공용환경
	- 일반: 기본 머신 폴더:
	- 네트워크 -> 새 네트워크 추가
	- 입력 -> 가상머신 -> 호스트 키 조합 Alt + Ctrl
	- 새로만들기
		이름: lx01
		종류: Linux
		버전: Red Hat(64-bit)
		- 메모리 크기: 4096
		- 지금 새 가상 하드 디스크 만들기
		- VDI 디스크 이미지 만들기
		- 동적 할당
		- 파일 위치 및 크기: 40GB
		만들기
	개별 환경
		- 네트워크: 브릿지 어댑터
		- 저장소 광학드라이브 -> 리눅스 iso 파일 삽입 -> 시작

3. 가상환경에서 리눅스 설치 진행
	- Disc Found Skip
	- 언어 한국어 설정
	- 키보드언어 영어 설정
	- 기본 저장 장치
	- 모든 데이터를 삭제합니다 선택
	- 호스트명 입력 : 예) server01.hadoop.com
	- 아시아/서울 선택
	- 암호: 6자 이상
	- 사용자 레이아웃 만들기 선택
	- 장치 선택 메뉴
		.만들기 -> 표준파티션 -> 생성 -> 마운트 지점: /boot, 파일시스템 유형: ext4, 용량: 512
		.만들기 -> 표준파티션 -> 생성 -> 파일시스템 유형: swap, 용량: 2048
		.만들기 -> 표준파티션 -> 생성 -> 마운트 지점: /, 추가 용량 옵션: 가능한 최대 용량으로 채움
		- 다음 -> 포맷 -> 디스크에 변경사항 기록
	- 다음 -> 설치진행 -> 재부팅

4. 서버 ip 확인
ifconfig -a     # ip 확인
cd /etc         # 경로
cd sysconfig
cd network-scripts
pwd     # 경로 확인
ls      # 파일
vi ifcfg-eth0   # 파일 열기
insert 누르고 OnBOOT=no -> yes 변경후 ESC 누르고 :wq 하고 나온다. # 저장

service network restart     # 네트워크 재시작

/etc/init.d/network restart # 네트워크 재시작

sync # 메모리에 있는거 남기지 말고 실행
reboot  # 시스템 재시작

5. 리눅스 패키지 설치
yum repolist
yum update
yum -y install rdate
yum -y install gcc
yum -y install make
yum -y install wget
yum -y install gcc-c++
yum -y install cmake
yum -y install net-tools
yum -y install bind-utils
yum -y install psmisc
/
ps -ef | grep sshd  # sshd 프로세스 전체 출력
ssh root@IP주소  # 시큐어셀 원격 접속
pass: manager
/

6. 접속 계정 생성
useradd -g wheel datamaster     # 유저 만들기
passwd datamaster           # 패스워드 설정
/
ssh datamaster@IP주소
pass: manager
/

7. 서버 시간 동기화
vi time_sync.sh

#!/bin/bash
rdate -s time.bora.net && date && clock -r && clock -w > /dev/null 2>&1

vi -> 입력하려면 i
저장하고 나가려면 esc 누르고 :wq
:w! -> 덮어쓰기

chmod 700 time_sync.sh  # 나만 실행 하겠다

./time_sync.sh  # 현재 시간 확인

mv time_sync.sh /etc/cron.hourly    # etc/corn.hourly 라는 이름으로 이동하겠다(파일이름 붙여주면 리네임해준다)

(w 현재 접속 계정 확인)

8. 파일럿 프로젝트를 위한 OS 기본 값 설정
# vi /etc/sysconfig/selinux
SELINUX=enforcing 을 SELINUX=disabled

9. 방화벽(iptables) 끄기
ps -ef | grep iptables
(iptables 는 방화벽 프로그램)

//
kill -9 # 9번 시그널(kill)을 보내라.

/etc/init.d/iptables start  # 프로세스 시작
/etc/init.d/iptables stop   # 프로세스 정지

chkconfig  # 리눅스가 시작될때 자동으로 실행되는 데몬 프로그램 출력
chkconfig iptables off
//

/etc/init.d/iptables stop
chkconfig iptables off
chkconfig ip6tables off

vi /etc/sysctl.conf
#vm.swappiness = 10  를  추가하고 저장한다.

vi /etc/rc.local
#/bin/echo never > /sys/kernel/mm/redhat_transparent_hugepage/defrag
#/bin/echo never > /sys/kernel/mm/redhat_transparent_hugepage/enabled  를 추가하고 저장한다.

vi /etc/security/limits.conf
'''
root soft nofile 65536
root hard nofile 65536
*    soft nofile 65536
*    hard nofile 65536

root soft nproc 32768
root hard nproc 32768
*    soft nproc 32768
*    hard nproc 32768
'''
를  추가하고 저장한다.


vi /etc/udev/rules.d/70-persistent-net.rules

# PCI device 0x8086:0x100e (e1000)
# SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="08:00:27:c4:e9:b7", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0"
를  주석 처리한다.

reboot
서버 종료

virtualbox 프로젝트에서 우클릭 -> 네트워크 카드 MAC 주소 초기화 체크->
완전한 복제 -> 복제

------------------------------------------

프로젝트 2번 시작
root 접속

ifconfig -a
eth 기억

cd /etc
cd sysconfig
cd network-scripts

ls -a
vi ifcfg-eth0
DEVICE, HWADDR 부분 동기화

ifconfig -a 로 확인했을때 eth(번호) 부분과 동일하게 맞춰준다.
mv ifcfg-eth0 ifcfg-eth1    # mv 명령은 앞의 파일을 뒤의 파일로 바꾼다.

호스트 이름을 바꿔줘야 한다. 현재 server01 -> server02
vi /etc/sysconfig/network

service network restart
/etc/init.d/network restart

reboot

ifconfig -a
ip 확인

=====================
3번 프로젝트 복사 -> 위와같이 세팅
============================

[메모장]
# ip를 셋팅하기위한 조건
server01 eth0 192.168.1.102
server02 eth1 192.168.1.105
server03 eth2 192.168.1.106

netmask 255.255.255.0   # 고정
network 192.168.1.0     # 뒤에것을 0으로 해주면 된다.
gateway 192.168.1.1     # 뒤에 1로 해주면 된다.
nameserver 192.168.1.1  # nslookup Server: 부분에서 확인.

1.==
cd /etc/sysconfig/network-scripts

vi ifcfg-eth0

BOOTPROTO = static 으로 변경

IPADDR=192.168.1.(ip)

GATEWAY=192.168.1.1
NETMASK=255.255.255.0
NETWORK=192.168.1.0
:wq

mv ifcfg-eth0 ifcfg-eth1

2.==
---
cd /etc
vi resolv.conf
---
search hadoop.com

nameserver 192.168.1.1
nameserver 192.168.1.1  #예비 서버
---

ssh root@192.168.1.(ip)  # 서버접속


3.==
yum -y install traceroute       # 라우트 되는것을 추적하겠다.

traceroute www.google.com

ping www.google.com


4.==
vi /etc/hosts
192.168.1.102   server01.hadoop.com server01
192.168.1.105   server02.hadoop.com server02
192.168.1.106   server03.hadoop.com server03
추가

5.==
방화벽 off
/etc/init.d/iptables stop

6.==
(관리자 권한)
메모장으로 hosts 파일 열기
[하단]
192.168.1.102	server01.hadoop.com
192.168.1.105	server02.hadoop.com
192.168.1.106	server03.hadoop.com

7.== 다른컴퓨터에서 복제했을 경우
cd /etc/cloudera-scm-agent/
vi config.ini -> ip lx01로 변경
lx02, lx03 도 lx01 ip 로 변경

접속할때 http://lx01(ip):7180/cmf/hardware/hosts

----------------

/etc/init.d/network restart     # 네트워크 재시작

------------
Xshell 에서 새로만들기
이름: server01
호스트: server01.hadoop.com
---
사용자 인증탭: 사용자 이름: root
--------------

